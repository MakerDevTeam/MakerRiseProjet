<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAyAAAAJYCAMAAACtqHJCAAAABGdBTUEAALGPC/xhBQAAAwBQTFRFBAUJ
        BAYIBAYJBQYKBQcLBQcMBggMBggNBgkOBwkPBwoPCAoPBwsQBwsRCAoQCAsRCAwRCQwSCQ0TCg0UCQ4U
        Cg4VCg4WCw8XDA8XCxAXDBAXCxAYDBAYDBAZDREaDRIaDRIbDhIcDhMdDhQdDhQeDxUfEBUfEBUgEBYg
        EBYhERYiERcjERgjEhgkEhklExkmExomExonFBonFBsoFBspFBwoFBwpFBwqFRwrFh0sFh4sFh4tFh4u
        Fx8vFx8wFyAuGCAvFyAwGCAwGCAxGSEyGSIyGSIzGiM0GiM1GiQ1GiQ2GyQ3HCU3HCY4HCY5HCc6HSg6
        HSg7Hig8Hig9Hik+Hyo+Hyo/ICs/HypAICpAICtBICxBISxCISxDIS1EIi5EIi5FIy9GIzBGIzBHJDBH
        JDBIJDBJJTFKJTJKJTJLJjNMJjNNJjRMJjRNJjROJzVPKDVPJzVQKDVQKDZQKDZRKDdSKTdTKThSKThT
        KjhUKjhVKjlWKzpVKjpWKzpXLDtXLDtYLDtZLDxZLDxaLTxbLj1cLj5cLj5dAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgzVuAAAAAlwSFlzAAAO
        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
</value>
  </data>
</root>